# Generated by Django 4.2.7 on 2025-10-23 09:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('age', models.PositiveIntegerField(editable=False)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('mobile_primary', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('mobile_secondary', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=200, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(default='India', max_length=100)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=5, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='Height in cm', max_digits=5, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kg', max_digits=5, null=True)),
                ('bmi', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=4, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed')], default='single', max_length=20, null=True)),
                ('occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=50, null=True)),
                ('insurance_provider', models.CharField(blank=True, max_length=200, null=True)),
                ('insurance_policy_number', models.CharField(blank=True, max_length=100, null=True)),
                ('insurance_expiry_date', models.DateField(blank=True, null=True)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('last_visit_date', models.DateTimeField(blank=True, null=True)),
                ('total_visits', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deceased', 'Deceased')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_patients', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Patient Profile',
                'verbose_name_plural': 'Patient Profiles',
                'db_table': 'patient_profiles',
                'ordering': ['-registration_date'],
                'permissions': [('view_all_patients', 'Can view all patient records'), ('discharge_patient', 'Can discharge patients')],
            },
        ),
        migrations.CreateModel(
            name='PatientAllergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allergy_type', models.CharField(choices=[('drug', 'Drug/Medication'), ('food', 'Food'), ('environmental', 'Environmental'), ('contact', 'Contact'), ('other', 'Other')], max_length=20)),
                ('allergen', models.CharField(max_length=200)),
                ('severity', models.CharField(choices=[('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('life_threatening', 'Life Threatening')], max_length=20)),
                ('symptoms', models.TextField()),
                ('treatment', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allergies', to='patients.patientprofile')),
                ('recorded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_allergies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Patient Allergy',
                'verbose_name_plural': 'Patient Allergies',
                'db_table': 'patient_allergies',
                'ordering': ['-severity', 'allergen'],
            },
        ),
        migrations.CreateModel(
            name='PatientVitals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, help_text='Â°C', max_digits=4, null=True)),
                ('blood_pressure_systolic', models.PositiveIntegerField(blank=True, help_text='mmHg', null=True)),
                ('blood_pressure_diastolic', models.PositiveIntegerField(blank=True, help_text='mmHg', null=True)),
                ('heart_rate', models.PositiveIntegerField(blank=True, help_text='BPM', null=True)),
                ('respiratory_rate', models.PositiveIntegerField(blank=True, help_text='Breaths/min', null=True)),
                ('oxygen_saturation', models.DecimalField(blank=True, decimal_places=2, help_text='SpO2 %', max_digits=5, null=True)),
                ('blood_glucose', models.DecimalField(blank=True, decimal_places=2, help_text='mg/dL', max_digits=5, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vitals', to='patients.patientprofile')),
                ('recorded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_vitals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Patient Vitals',
                'verbose_name_plural': 'Patient Vitals',
                'db_table': 'patient_vitals',
                'ordering': ['-recorded_at'],
                'indexes': [models.Index(fields=['patient', '-recorded_at'], name='patient_vit_patient_cc161e_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='patientprofile',
            index=models.Index(fields=['patient_id'], name='patient_pro_patient_ab14ea_idx'),
        ),
        migrations.AddIndex(
            model_name='patientprofile',
            index=models.Index(fields=['mobile_primary'], name='patient_pro_mobile__13fd15_idx'),
        ),
        migrations.AddIndex(
            model_name='patientprofile',
            index=models.Index(fields=['last_name', 'first_name'], name='patient_pro_last_na_653e81_idx'),
        ),
        migrations.AddIndex(
            model_name='patientprofile',
            index=models.Index(fields=['status'], name='patient_pro_status_79548d_idx'),
        ),
        migrations.AddIndex(
            model_name='patientallergy',
            index=models.Index(fields=['patient', 'is_active'], name='patient_all_patient_8c3cd4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='patientallergy',
            unique_together={('patient', 'allergen')},
        ),
    ]
