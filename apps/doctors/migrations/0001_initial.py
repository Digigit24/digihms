# Generated by Django 4.2.7 on 2025-10-19 20:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Specialty',
                'verbose_name_plural': 'Specialties',
                'db_table': 'specialties',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='specialties_name_ea5b66_idx'), models.Index(fields=['code'], name='specialties_code_dec0e7_idx'), models.Index(fields=['is_active'], name='specialties_is_acti_0369e1_idx')],
            },
        ),
        migrations.CreateModel(
            name='DoctorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medical_license_number', models.CharField(blank=True, max_length=64)),
                ('license_issuing_authority', models.CharField(blank=True, max_length=128, null=True)),
                ('license_issue_date', models.DateField(blank=True, null=True)),
                ('license_expiry_date', models.DateField(blank=True, null=True)),
                ('qualifications', models.TextField(blank=True, null=True)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('consultation_fee', models.DecimalField(decimal_places=2, default=0, help_text='Consultation fee in INR', max_digits=10)),
                ('consultation_duration', models.PositiveIntegerField(default=15, help_text='Duration in minutes')),
                ('is_available_online', models.BooleanField(default=False)),
                ('is_available_offline', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('on_leave', 'On Leave'), ('inactive', 'Inactive')], default='active', max_length=16)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=3)),
                ('total_reviews', models.PositiveIntegerField(default=0, editable=False)),
                ('total_consultations', models.PositiveIntegerField(default=0, editable=False)),
                ('signature', models.TextField(blank=True, null=True)),
                ('languages_spoken', models.TextField(blank=True, help_text='Comma-separated languages', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('specialties', models.ManyToManyField(blank=True, related_name='doctors', to='doctors.specialty')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Doctor Profile',
                'verbose_name_plural': 'Doctor Profiles',
                'db_table': 'doctor_profiles',
                'ordering': ['-created_at'],
                'permissions': [('view_all_doctors', 'Can view all doctor profiles'), ('manage_doctor_schedule', 'Can manage doctor schedules')],
            },
        ),
        migrations.CreateModel(
            name='DoctorAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=16)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('max_appointments', models.PositiveIntegerField(default=0, help_text='Maximum appointments for this slot (0 = unlimited)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='doctors.doctorprofile')),
            ],
            options={
                'verbose_name': 'Doctor Availability',
                'verbose_name_plural': 'Doctor Availability',
                'db_table': 'doctor_availability',
                'ordering': ['doctor', 'day_of_week', 'start_time'],
            },
        ),
        migrations.AddIndex(
            model_name='doctorprofile',
            index=models.Index(fields=['status'], name='doctor_prof_status_7a3cfe_idx'),
        ),
        migrations.AddIndex(
            model_name='doctorprofile',
            index=models.Index(fields=['medical_license_number'], name='doctor_prof_medical_d685ee_idx'),
        ),
        migrations.AddIndex(
            model_name='doctorprofile',
            index=models.Index(fields=['-created_at'], name='doctor_prof_created_04edc8_idx'),
        ),
        migrations.AddIndex(
            model_name='doctoravailability',
            index=models.Index(fields=['doctor', 'day_of_week'], name='doctor_avai_doctor__b54d61_idx'),
        ),
        migrations.AddIndex(
            model_name='doctoravailability',
            index=models.Index(fields=['is_available'], name='doctor_avai_is_avai_577882_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='doctoravailability',
            unique_together={('doctor', 'day_of_week', 'start_time')},
        ),
    ]
